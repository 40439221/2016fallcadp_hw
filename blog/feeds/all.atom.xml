<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>40423226個人網誌 (NFU-MDE104B)</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2017-01-13T12:00:00+08:00</updated><entry><title>2016 Fall 電腦輔助設計與實習期末自評總結</title><link href="./2016-fall-dian-nao-fu-zhu-she-ji-yu-shi-xi-qi-mo-zi-ping-zong-jie.html" rel="alternate"></link><published>2017-01-13T12:00:00+08:00</published><updated>2017-01-13T12:00:00+08:00</updated><author><name>40423226</name></author><id>tag:,2017-01-13:./2016-fall-dian-nao-fu-zhu-she-ji-yu-shi-xi-qi-mo-zi-ping-zong-jie.html</id><summary type="html">&lt;p&gt;一開始使用子模組的設定，但是大多數的子模組的內容是正確的，只有少數的內容是有問題，也會害全體的倉儲無法正常運作，這樣只好忍痛把有問題的人踢除子模組，要不然倉儲沒辦法正常運作。&lt;/p&gt;

&lt;p&gt;在設定子模組的時候，常常會遇到問題，以前等別人發生相同問題，然後直接跟別人拿解決方法，現在只好靠自己查字典，學著上網收尋，看有沒有人也遇過相同的問題，試著找出問題出在哪裡，想辦法一一排除系統回報的錯誤。&lt;/p&gt;

&lt;p&gt;這學期利用 ShareX 截圖還有錄製影片， 學習紀錄自己的操作方式，以便之後自己回顧時的方便性，也可以直接利用影片，教同學如何操作，而不用大費周章到他旁邊，進行一對一不符合成及效益的教學。&lt;/p&gt;

&lt;p&gt;這次主要學習到 SolveSpace 及 Onshape ，雖然 SolveSpace 是一個開放的程式，但他的計算能力比較差，沒辦法跟 Onshape 做比較，但兩個程式都各有優缺點，就要看自己如何運用。&lt;/p&gt;

&lt;p&gt;一個學期也過去了，學到了不少的東西，也發現自己不足的地方，之後會更加度促自己。&lt;/p&gt;</summary><category term="期末自評總結"></category></entry><entry><title>20170106W17</title><link href="./20170106w17.html" rel="alternate"></link><published>2017-01-06T12:00:00+08:00</published><updated>2017-01-06T12:00:00+08:00</updated><author><name>40423226</name></author><id>tag:,2017-01-06:./20170106w17.html</id><summary type="html">&lt;h2&gt;利用約束條件,使機構作相對運動&lt;/h2&gt;

&lt;iframe src="https://player.vimeo.com/video/199112247" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="上課內容"></category><category term="SolveSpace"></category></entry><entry><title>20161230W16</title><link href="./20161230w16.html" rel="alternate"></link><published>2016-12-30T12:00:00+08:00</published><updated>2016-12-30T12:00:00+08:00</updated><author><name>40423226</name></author><id>tag:,2016-12-30:./20161230w16.html</id><summary type="html">&lt;h2&gt;OnShape繪製Mechanism Tutorial&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/40423226/2016fallcadp_hw/raw/gh-pages/data/ProEMechanism.pdf"&gt;PDF下載: ProEMechanism&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/40423226/2016fallcadp_hw/raw/gh-pages/data/solvespace/Mechanism%20Tutorial.rar"&gt;SolveSpace下載: ProEMechanism&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cad.onshape.com/documents/18b8d5026b722b133d988d1d/w/57f7f2e35ad3b73bdfd112f7/e/c382d9a4ccc4a9183e4605c1"&gt;OnShape網站: Mechanism Tutorial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;adjuster_base&lt;/p&gt;

&lt;iframe src="../data/solvespace/Mechanism Tutorial/adjuster_base.html" width="800" height="480"&gt;&lt;/iframe&gt;

&lt;p&gt;adjuster&lt;/p&gt;

&lt;iframe src="../data/solvespace/Mechanism Tutorial/adjuster.html" width="800" height="480"&gt;&lt;/iframe&gt;

&lt;p&gt;base&lt;/p&gt;

&lt;iframe src="../data/solvespace/Mechanism Tutorial/base.html" width="800" height="480"&gt;&lt;/iframe&gt;

&lt;p&gt;connection&lt;/p&gt;

&lt;iframe src="../data/solvespace/Mechanism Tutorial/connection.html" width="800" height="480"&gt;&lt;/iframe&gt;

&lt;p&gt;cylinder&lt;/p&gt;

&lt;iframe src="../data/solvespace/Mechanism Tutorial/cylinder.html" width="800" height="480"&gt;&lt;/iframe&gt;

&lt;p&gt;handle&lt;/p&gt;

&lt;iframe src="../data/solvespace/Mechanism Tutorial/handle.html" width="800" height="480"&gt;&lt;/iframe&gt;

&lt;p&gt;hinge&lt;/p&gt;

&lt;iframe src="../data/solvespace/Mechanism Tutorial/hinge.html" width="800" height="480"&gt;&lt;/iframe&gt;

&lt;p&gt;piston&lt;/p&gt;

&lt;iframe src="../data/solvespace/Mechanism Tutorial/piston.html" width="800" height="480"&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;/p&gt;mechanism tutorial&lt;/p&gt;
&lt;iframe src="../data/solvespace/Mechanism Tutorial/mechanism tutorial.html" width="800" height="480"&gt;&lt;/iframe&gt;&lt;/p&gt;</summary><category term="上課內容"></category><category term="OnShape"></category><category term="SolveSpace"></category></entry><entry><title>20161223W15</title><link href="./20161223w15.html" rel="alternate"></link><published>2016-12-23T12:00:00+08:00</published><updated>2016-12-23T12:00:00+08:00</updated><author><name>40423226</name></author><id>tag:,2016-12-23:./20161223w15.html</id><summary type="html">&lt;h2&gt;整理目前為止上課的內容&lt;/h2&gt;</summary><category term="上課內容"></category></entry><entry><title>20161216W14</title><link href="./20161216w14.html" rel="alternate"></link><published>2016-12-16T12:00:00+08:00</published><updated>2016-12-16T12:00:00+08:00</updated><author><name>40423226</name></author><id>tag:,2016-12-16:./20161216w14.html</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/40423226/2016fallcadp_hw/raw/gh-pages/data/solvespace/delta_printer_v2.7z"&gt;SolveSpace下載: delta_printer_v2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="../data/solvespace/delta_printer_v2/delta_printer.png" width="800" /&gt;&lt;/p&gt;</summary><category term="上課內容"></category><category term="SolveSpace"></category></entry><entry><title>20161209W13</title><link href="./20161209w13.html" rel="alternate"></link><published>2016-12-09T12:00:00+08:00</published><updated>2016-12-09T12:00:00+08:00</updated><author><name>40423226</name></author><id>tag:,2016-12-09:./20161209w13.html</id><summary type="html">&lt;h2&gt;用SolveSpace把檔案存成html檔,並且更改成http設定,利用嵌入網頁的指令,把html檔案放進網誌裡面&lt;/h2&gt;

&lt;iframe src="https://player.vimeo.com/video/194948275" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2&gt;遠端網誌無法更新&lt;/h2&gt;

&lt;p&gt;近端利用瀏覽器檢查網誌是正常,但是遠端的網誌卻沒有更新,發現推上去的資料出現問題,GitHub還親自寄信給我&lt;/p&gt;

&lt;pre&gt;The page build failed with the following error:

The tag `notebook` on line 13 in `plugin/liquid_tags/test_data/content/test-ipython-notebook-nbformat3.md` is not a recognized Liquid tag. For more information, see https://help.github.com/articles/page-build-failed-unknown-tag-error.

For information on troubleshooting Jekyll see:

  https://help.github.com/articles/troubleshooting-jekyll-builds

If you have any questions you can contact us by replying to this email.&lt;/pre&gt;

&lt;p&gt;從網頁來看我多了一個test_data的資料夾,於是進去到相對的目錄,利用指令把它刪掉就可以順利推到遠端,進行網頁的更新&lt;/p&gt;

&lt;pre&gt;git rm -r -f plugin/liquid_tags/test_data&lt;/pre&gt;

&lt;p&gt;&lt;img src="../data/image/bug.png" width="800" /&gt;&lt;/p&gt;</summary><category term="上課內容"></category><category term="解決問題"></category><category term="SolveSpace"></category></entry><entry><title>20161202W12</title><link href="./20161202w12.html" rel="alternate"></link><published>2016-12-02T12:00:00+08:00</published><updated>2016-12-02T12:00:00+08:00</updated><author><name>40423226</name></author><id>tag:,2016-12-02:./20161202w12.html</id><summary type="html">&lt;h2&gt;Cube&lt;/h2&gt;

&lt;iframe src="https://player.vimeo.com/video/194943832" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe src="../data/solvespace/cube.html" width="800" height="480"&gt;&lt;/iframe&gt;

&lt;h2&gt;Strut&lt;/h2&gt;

&lt;iframe src="https://player.vimeo.com/video/194943838" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe src="../data/solvespace/strut.html" width="800" height="480"&gt;&lt;/iframe&gt;

&lt;h2&gt;組合&lt;/h2&gt;

&lt;iframe src="https://player.vimeo.com/video/194943848" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe src="../data/solvespace/combination.html" width="800" height="480"&gt;&lt;/iframe&gt;</summary><category term="上課內容"></category><category term="SolveSpace"></category></entry><entry><title>20161125W11</title><link href="./20161125w11.html" rel="alternate"></link><published>2016-11-25T12:00:00+08:00</published><updated>2016-11-25T12:00:00+08:00</updated><author><name>40423226</name></author><id>tag:,2016-11-25:./20161125w11.html</id><summary type="html">&lt;h2&gt;虎科大36週年校慶&lt;/h2&gt;

&lt;p&gt;&lt;img src="../data/image/nfu_36th.png" width="800" /&gt;&lt;/p&gt;</summary><category term="虎科大36週年校慶"></category></entry><entry><title>20161118W10</title><link href="./20161118w10.html" rel="alternate"></link><published>2016-11-18T12:00:00+08:00</published><updated>2016-11-18T12:00:00+08:00</updated><author><name>40423226</name></author><id>tag:,2016-11-18:./20161118w10.html</id><summary type="html">&lt;p&gt;有關 Solvespace 機構模擬功能介紹, 與 Python3 及 Brython 程式驗證&lt;/p&gt;


&lt;h2&gt;Solvespace 平面四連桿機構模擬&lt;/h2&gt;

&lt;iframe src="https://player.vimeo.com/video/192930481" width="640" height="480" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;路徑圖&lt;/p&gt;

&lt;p&gt;&lt;img src="../data/image/4bar_2D.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;將所得到的點座標 .csv 以 Excel 畫圖, 得到:&lt;/p&gt;
&lt;p&gt;&lt;img src="../data/image/trace1.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;Python3 平面四連桿機構模擬:&lt;/p&gt;
&lt;p&gt;接下來利用三角函數推導四連桿機構的運動模擬, 即已知長度 18 公分的連桿以逆時針方向旋轉, 希望求三角形頂點的運動座標.&lt;/p&gt;
&lt;p&gt;首先利用 Brython, 讀取 data 目錄中的 4bar_2D.csv 座標檔案, 然後以 splitlines() 及 split() 取出各點的 x 座標與 y 座標後, 將點連成路徑曲線如下:&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫兩條直線 --&gt;

&lt;canvas id="fourbar" width="600" height="400"&gt;&lt;/canvas&gt;

&lt;div id="container1"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
# 準備繪圖畫布
canvas = doc["fourbar"]
container1 = doc['container1']
ctx = canvas.getContext("2d")

fourbar_data = open("../data/solvespace/4bar_2D.csv").read()
fourbar_list = fourbar_data.splitlines()
#container1 &lt;= fourbar_list[0]
# 以下可以利用 ctx 物件進行畫圖
# 先畫一條直線
ctx.beginPath()
# 設定線的寬度為 1 個單位
ctx.lineWidth = 1
# 利用 transform 將 y 座標反轉, 且 offset canvas.height
# (X scale, X skew, Y skew, Y scale, X offset, Y offset)
# 配合圖形位置進行座標轉換
ctx.transform(1, 0, 0, -1, canvas.width/2+250, canvas.height/2+100)
# 畫出 x 與 y 座標線
# 各座標值放大 8 倍
ratio = 8
'''
ctx.moveTo(0, 0)
ctx.lineTo(0, 100)
ctx.moveTo(0, 0)
ctx.lineTo(100, 0)
'''
ctx.moveTo(0, 0)
ctx.lineTo(-30*ratio, 0)
start_point = fourbar_list[0].split(",")
ctx.moveTo(float(start_point[0])*ratio, float(start_point[1])*ratio)
count = 0
for data in fourbar_list[1:]:
    point = data.split(",")
    #count = count + 1
    #container1 &lt;= str(count) + ":" + point[0] + "," + point[1]
    #container1 &lt;= html.BR()
    ctx.lineTo(float(point[0])*ratio, float(point[1])*ratio)
# 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
ctx.strokeStyle = "blue"
# 實際執行畫線
ctx.stroke()
ctx.closePath()
&lt;/script&gt;

&lt;p&gt;Ubuntu 安裝 matplotlib:&lt;/p&gt;
&lt;p&gt;sudo apt-get install python3-matplotlib&lt;/p&gt;
&lt;pre class="brush: python"&gt;
import math
import time
# 利用 matplotlib 程式庫畫出 contour 輪廓
import matplotlib.pyplot as plt

class Coord(object):
    def __init__(self,x,y):
        self.x = x
        self.y = y

    def __sub__(self,other):
        # This allows you to substract vectors
        return Coord(self.x-other.x,self.y-other.y)

    def __repr__(self):
        # Used to get human readable coordinates when printing
        return "Coord(%f,%f)"%(self.x,self.y)

    def length(self):
        # Returns the length of the vector
        return math.sqrt(self.x**2 + self.y**2)

    def angle(self):
        # Returns the vector's angle
        return math.atan2(self.y,self.x)

def normalize(coord):
    return Coord(
        coord.x/coord.length(),
        coord.y/coord.length()
        )

def perpendicular(coord):
    # Shifts the angle by pi/2 and calculate the coordinates
    # using the original vector length
    return Coord(
        coord.length()*math.cos(coord.angle()+math.pi/2),
        coord.length()*math.sin(coord.angle()+math.pi/2)
        )


# 點類別
class Point(object):
    # 起始方法
    def __init__(self, x, y):
        self.x = x
        self.y = y

    # 加入 Eq 方法
    def Eq(self, pt):
        self.x = pt.x
        self.y = pt.y

    # 加入 setPoint 方法
    def setPoint(self, px, py):
        self.x = px
        self.y = py

    # 加上 distance(pt) 方法, 計算點到 pt 的距離
    def distance(self, pt):
        self.pt = pt
        x = self.x - self.pt.x
        y = self.y - self.pt.y
        return math.sqrt(x * x + y * y)


# Line 類別物件
class Line(object):

    # 起始方法
    def __init__(self, p1, p2):
        self.p1 = p1
        self.p2 = p2
        # 直線的第一點, 設為線尾
        self.Tail = self.p1
        # 直線組成的第二點, 設為線頭
        self.Head = self.p2
        # 直線的長度屬性
        self.length = math.sqrt(math.pow(self.p2.x-self.p1.x, 2)+math.pow(self.p2.y-self.p1.y,2))

    # setPP 以指定頭尾座標點來定義直線
    def setPP(self, p1, p2):
        self.p1 = p1
        self.p2 = p2
        self.Tail = self.p1
        self.Head = self.p2
        self.length = math.sqrt(math.pow(self.p2.x-self.p1.x, 2)+math.pow(self.p2.y-self.p1.y,2))

    # setRT 方法 for Line, 應該已經確定 Tail 點, 然後以 r, t 作為設定 Head 的參考
    def setRT(self, r, t):
        self.r = r
        self.t = t
        x = self.r * math.cos(self.t)
        y = self.r * math.sin(self.t)
        self.Tail.Eq(self.p1)
        self.Head.setPoint(self.Tail.x + x,self.Tail.y + y)

    # getR 方法 for Line
    def getR(self):
        # x 分量與 y 分量
        x = self.p1.x - self.p2.x
        y = self.p1.y - self.p2.y
        return math.sqrt(x * x + y * y)

    # 根據定義 atan2(y,x), 表示 (x,y) 與 正 x 軸之間的夾角, 介於 pi 與 -pi 間
    def getT(self):
        x = self.p2.x - self.p1.x
        y = self.p2.y - self.p1.y
        if (math.fabs(x) &lt; math.pow(10,-100)):
            if(y &lt; 0.0):
                return (-math.pi/2)
            else:
                return (math.pi/2)
        else:
            return math.atan2(y, x)

    # setTail 方法 for Line
    def setTail(self, pt):
        self.pt = pt
        self.Tail.Eq(pt)
        self.Head.setPoint(self.pt.x + self.x, self.pt.y + self.y)

    # getHead 方法 for Line
    def getHead(self):
        return self.Head

    def getTail(self):
        return self.Tail


class Link(Line):
    def __init__(self, p1, p2):
        self.p1 = p1
        self.p2 = p2
        self.length = math.sqrt(math.pow((self.p2.x - self.p1.x), 2) + math.pow((self.p2.y - self.p1.y), 2))


class Triangle(object):
    def __init__(self, p1, p2, p3):
        self.p1 = p1
        self.p2 = p2
        self.p3 = p3

    def getLenp3(self):
        p1 = self.p1
        ret = p1.distance(self.p2)
        return ret

    def getLenp1(self):
        p2 = self.p2
        ret = p2.distance(self.p3)
        return ret

    def getLenp2(self):
        p1 = self.p1
        ret = p1.distance(self.p3)
        return ret

    # 角度
    def getAp1(self):
        ret = math.acos(((self.getLenp2() * self.getLenp2() + self.getLenp3() * self.getLenp3()) - self.getLenp1() * self.getLenp1()) / (2* self.getLenp2() * self.getLenp3()))
        return ret

    def getAp2(self):
        ret =math.acos(((self.getLenp1() * self.getLenp1() + self.getLenp3() * self.getLenp3()) - self.getLenp2() * self.getLenp2()) / (2* self.getLenp1() * self.getLenp3()))
        return ret

    def getAp3(self):
        ret = math.acos(((self.getLenp1() * self.getLenp1() + self.getLenp2() * self.getLenp2()) - self.getLenp3() * self.getLenp3()) / (2* self.getLenp1() * self.getLenp2()))
        return ret

    # ends Triangle def
    # 透過三個邊長定義三角形
    def setSSS(self, lenp3, lenp1, lenp2):
        self.lenp3 = lenp3
        self.lenp1 = lenp1
        self.lenp2 = lenp2
        self.ap1 = math.acos(((self.lenp2 * self.lenp2 + self.lenp3 * self.lenp3) - self.lenp1 * self.lenp1) / (2* self.lenp2 * self.lenp3))
        self.ap2 = math.acos(((self.lenp1 * self.lenp1 + self.lenp3 * self.lenp3) - self.lenp2 * self.lenp2) / (2* self.lenp1 * self.lenp3))
        self.ap3 = math.acos(((self.lenp1 * self.lenp1 + self.lenp2 * self.lenp2) - self.lenp3 * self.lenp3) / (2* self.lenp1 * self.lenp2))

    # 透過兩個邊長與夾角定義三角形
    def setSAS(self, lenp3, ap2, lenp1):
        self.lenp3 = lenp3
        self.ap2 = ap2
        self.lenp1 = lenp1
        self.lenp2 = math.sqrt((self.lenp3 * self.lenp3 + self.lenp1 * self.lenp1) - 2* self.lenp3 * self.lenp1 * math.cos(self.ap2))
        #等於 SSS(AB, BC, CA)

    def setSaSS(self, lenp2, lenp3, lenp1):
        self.lenp2 = lenp2
        self.lenp3 = lenp3
        self.lenp1 = lenp1
        if(self.lenp1 &gt; (self.lenp2 + self.lenp3)):
        #CAB 夾角為 180 度, 三點共線且 A 介於 BC 之間
            ret = math.pi
        else :
            # CAB 夾角為 0, 三點共線且 A 不在 BC 之間
            if((self.lenp1 &lt; (self.lenp2 - self.lenp3)) or (self.lenp1 &lt; (self.lenp3 - self.lenp2))):
                ret = 0.0
            else :
            # 透過餘絃定理求出夾角 CAB 
                ret = math.acos(((self.lenp2 * self.lenp2 + self.lenp3 * self.lenp3) - self.lenp1 * self.lenp1) / (2 * self.lenp2 * self.lenp3))
        return ret

    # 取得三角形的三個邊長值
    def getSSS(self):
        temp = []
        temp.append( self.getLenp1() )
        temp.append( self.getLenp2() )
        temp.append( self.getLenp3() )
        return temp

    # 取得三角形的三個角度值
    def getAAA(self):
        temp = []
        temp.append( self.getAp1() )
        temp.append( self.getAp2() )
        temp.append( self.getAp3() )
        return temp

    # 取得三角形的三個角度與三個邊長
    def getASASAS(self):
        temp = []
        temp.append(self.getAp1())
        temp.append(self.getLenp1())
        temp.append(self.getAp2())
        temp.append(self.getLenp2())
        temp.append(self.getAp3())
        temp.append(self.getLenp3())
        return temp

    #2P 2L return mid P
    def setPPSS(self, p1, p3, lenp1, lenp3):
        temp = []
        self.p1 = p1
        self.p3 = p3
        self.lenp1 = lenp1
        self.lenp3 = lenp3

        #bp3 is the angle beside p3 point, cp3 is the angle for line23, p2 is the output
        line31 = Line(p3, p1)
        self.lenp2 = line31.getR()
        #self.lenp2 = self.p3.distance(self.p1)
        #這裡是求角3
        ap3 = math.acos(((self.lenp1 * self.lenp1 + self.lenp2 * self.lenp2) - self.lenp3 * self.lenp3) / (2 * self.lenp1 * self.lenp2))
        #ap3 = math.acos(((self.lenp1 * self.lenp1 + self.lenp3 * self.lenp3) - self.lenp2 * self.lenp2) / (2 * self.lenp1 * self.lenp3))
        bp3 = line31.getT()
        cp3 = bp3 - ap3
        temp.append(p3.x + self.lenp1*math.cos(cp3))#p2.x
        temp.append(p3.y + self.lenp1*math.sin(cp3))#p2.y
        return temp

# 以上為相關函式物件的定義區
# 全域變數
midpt = Point(0, 0)
tippt = Point(0, 0)
contour = []

# 幾何位置輸入變數
x=10
y=10
r=10

# 其他輸入變數
theta = 0
degree = math.pi/180.0
dx = 2
dy = 4

#set p1.p2.p3.p4 position
p1 =  Point(150,100)
p2 =  Point(150,200)
p3 =  Point(300,300)
p4 =  Point(350,100)

#create links
line1 =  Link(p1,p2)
line2 =  Link(p2,p3)
line3 =  Link(p3,p4)
line4 =  Link(p1,p4)
line5 =  Link(p2,p4)

link2_len = p2.distance(p3)
link3_len = p3.distance(p4)

triangle1 =  Triangle(p1,p2,p4)
triangle2 =  Triangle(p2,p3,p4)

def simulate():
    global theta, midpt, oldpt
    theta += dx
    p2.x = p1.x + line1.length*math.cos(theta*degree)
    p2.y = p1.y - line1.length*math.sin(theta*degree)
    p3.x, p3.y = triangle2.setPPSS(p2,p4,link2_len,link3_len)
    # 計算垂直單位向量
    a = Coord(p3.x, p3.y)
    b = Coord(p2.x, p2.y)
    normal = perpendicular(normalize(a-b))
    midpt.x = (p2.x + p3.x)/2
    midpt.y = (p2.y + p3.y)/2
    tippt.x = midpt.x + 150*normal.x
    tippt.y = midpt.y + 150*normal.y
    # 印出座標點
    #print(round(tippt.x, 2), round(tippt.y, 2))
    if theta &lt; 360:
        contour.append((round(tippt.x, 2), round(tippt.y, 2)))

for i in range(180):
    simulate()
# 印出 contour 
#print(contour)

x_list = [x for (x, y) in contour]
y_list = [y for (x, y) in contour]

plt.xlabel('x coordinate')
plt.ylabel('y coordinate')

plt.plot(x_list, y_list)
plt.show()
&lt;/pre&gt;

&lt;p&gt;以下將上述四連桿模擬程式移到近端的 Jupyter 平台中執行:&lt;/p&gt;
&lt;p&gt;以下將上述四連桿模擬程式移到 Jupyterhub 平台中執行:&lt;/p&gt;
&lt;p&gt;以下再利用 Brython 繪出四連桿模擬特定點的掃掠圖:&lt;/p&gt;
&lt;p&gt;以下利用 Brython 動態畫出四連桿機構模擬圖:&lt;/p&gt;
&lt;p&gt;以下利用 Solvespace 繪圖法進行相同機構模擬驗證:&lt;/p&gt;
&lt;p&gt;以下再利用 Solvespace 程式 API 方法進行四連桿模擬驗證:&lt;/p&gt;
&lt;p&gt;以下以 Delta 3D 印表機印出連桿零件, 組立後以步進馬達驅動進行驗證:&lt;/p&gt;
&lt;p&gt;以下利用伸縮連桿設計, 以 Delta 3D 印表機印出連桿零件, 組立後以步進馬達驅動進行驗證:&lt;/p&gt;
&lt;p&gt;請以上述相同流程, 模擬並實作驗證 &lt;a href="http://solvespace.com/linkage.pl"&gt;多連桿機構&lt;/a&gt;的作動.&lt;/p&gt;</summary><category term="上課內容"></category><category term="SolveSpace"></category></entry><entry><title>20161111W9</title><link href="./20161111w9.html" rel="alternate"></link><published>2016-11-11T12:00:00+08:00</published><updated>2016-11-11T12:00:00+08:00</updated><author><name>40423226</name></author><id>tag:,2016-11-11:./20161111w9.html</id><summary type="html">&lt;h2&gt;&lt;a href="http://mde.tw/2016fallcadp/blog/2016fall-ji-jie-she-ji-zhu-ti-jiao-xue.html"&gt;檢查自己的連結是否正確&lt;/a&gt;&lt;/h2&gt;</summary><category term="上課內容"></category></entry><entry><title>20161104W8</title><link href="./20161104w8.html" rel="alternate"></link><published>2016-11-04T12:00:00+08:00</published><updated>2016-11-04T12:00:00+08:00</updated><author><name>40423226</name></author><id>tag:,2016-11-04:./20161104w8.html</id><summary type="html">&lt;h2&gt;&lt;a href="http://pygroup-ag100.rhcloud.com"&gt;期中課程評量系統&lt;/a&gt;&lt;/h2&gt;</summary><category term="上課內容"></category></entry><entry><title>20161028W7</title><link href="./20161028w7.html" rel="alternate"></link><published>2016-10-28T12:00:00+08:00</published><updated>2016-10-28T12:00:00+08:00</updated><author><name>40423226</name></author><id>tag:,2016-10-28:./20161028w7.html</id><summary type="html">&lt;h2&gt;使用Trace Point計算路徑&lt;h2&gt;
&lt;iframe src="https://player.vimeo.com/video/190090265" width="640" height="480" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;路徑圖&lt;/p&gt;
&lt;a&gt;&lt;img src="../data/image/Trace Point.PNG" width="800" /&gt;

&lt;h2&gt;解決子模組設定的問題&lt;/h2&gt;
&lt;p&gt;把以下多餘的子模組刪掉&lt;/p&gt;
&lt;pre&gt;
[submodule "2016fallcadp_hw"]
    path = 2016fallcadp_hw
    url = https://github.com/40423226/2016fallcadp_hw.git
    branch = gh-pages
&lt;/pre&gt;
&lt;p&gt;更改後為以下的內容&lt;/p&gt;
&lt;pre&gt;
[submodule "40423206"]
    path = 40423206
    url = https://github.com/40423206/2016fallcadp_hw.git
    branch = gh-pages
[submodule "40423224"]
    path = 40423224
    url = https://github.com/40423224/2016fallcadp_hw.git
    branch = gh-pages
[submodule "40423226"]
    path = 40423226
    url = https://github.com/40423226/2016fallcadp_hw.git
    branch = gh-pages
[submodule "40423229"]
    path = 40423229
    url = https://github.com/40423229/2016fallcadp_hw.git
    branch = gh-pages
[submodule "40423214"]
    path = 40423214
    url = https://github.com/40423214/2016fallcadp_hw.git
    branch = gh-pages
[submodule "40423216"]
    path = 40423216
    url = https://github.com/40423216/2016fallcadp_hw.git
    branch = gh-pages
&lt;/pre&gt;</summary><category term="上課內容"></category><category term="解決問題"></category><category term="子模組"></category></entry><entry><title>20161021W6</title><link href="./20161021w6.html" rel="alternate"></link><published>2016-10-21T12:00:00+08:00</published><updated>2016-10-21T12:00:00+08:00</updated><author><name>40423226</name></author><id>tag:,2016-10-21:./20161021w6.html</id><summary type="html">&lt;h2&gt;解決子模組在對應上的問題&lt;/h2&gt;

&lt;p&gt;因為之前的2016fallcadp_hw倉儲少複製了一些東西,刪除舊的倉儲後,重新做一個和之前倉儲同名的2016fallcadp_hw倉儲,但是在小組倉儲所連結的子模組,抓不到新倉儲連結,所以我們需要重新加入一次組員倉儲的資料&lt;/p&gt;

&lt;p&gt;以為只要再輸入一次指令就可以讓程式抓最新的子模組近來&lt;/p&gt;

&lt;pre&gt;
Y:\tmp\2016fallcadp_bg6&gt;git submodule add -b gh-pages https://github.com/40423226/2016fallcadp_hw.git 40423226
'40423226' already exists in the index
&lt;/pre&gt;

&lt;p&gt;但是程式告訴我們40423226的子模組已經在裡面,所以在試著用git rm 40423226 -f 來刪除存放該子模組資料的資料夾,然後再git submodule add的一次組員倉儲的資料&lt;/p&gt;

&lt;pre&gt;
Y:\tmp\2016fallcadp_bg6&gt;git submodule add -b gh-pages https://github.com/40423226/2016fallcadp_hw.git 40423226
A git directory for '40423226' is found locally with remote(s):
  origin        https://github.com/40423226/2016fallcadp_hw.git
If you want to reuse this local git directory instead of cloning again from
  https://github.com/40423226/2016fallcadp_hw.git
use the '--force' option. If the local git directory is not the correct repo
or you are unsure what this means choose another name with the '--name' option.
&lt;/pre&gt;

&lt;p&gt;程式告訴我們還有資料沒刪除乾淨,於是我們再執行一次刪除的指令&lt;/p&gt;

&lt;pre&gt;
Y:\tmp\2016fallcadp_bg6&gt;git rm 40423226 -f
fatal: pathspec '40423226' did not match any files
&lt;/pre&gt;

&lt;p&gt;然而程式說找不到任何有關該名稱的文件資料,後來我們發現submodule內的設定並沒有也因此刪除,要刪除submodule的設定有兩個方法&lt;/p&gt;

&lt;h3&gt;解決方法一&lt;/h3&gt;

&lt;p&gt;從SciTE打開,在2016fallcadp_bg6資料夾內的.gitmodules檔案,把該組員的子模組設定刪除後就可以存檔&lt;/p&gt;

&lt;pre&gt;
[submodule "40423206"]
    path = 40423206
    url = https://github.com/40423206/2016fallcadp_hw.git
    branch = gh-pages
[submodule "40423224"]
    path = 40423224
    url = https://github.com/40423224/2016fallcadp_hw.git
    branch = gh-pages
[submodule "2016fallcadp_hw"]
    path = 2016fallcadp_hw
    url = https://github.com/40423226/2016fallcadp_hw.git
    branch = gh-pages
[submodule "40423229"]
    path = 40423229
    url = https://github.com/40423229/2016fallcadp_hw.git
    branch = gh-pages
[submodule "40423214"]
    path = 40423214
    url = https://github.com/40423214/2016fallcadp_hw.git
    branch = gh-pages
[submodule "40423216"]
    path = 40423216
    url = https://github.com/40423216/2016fallcadp_hw.git
    branch = gh-pages
&lt;/pre&gt;

&lt;p&gt;如果有打下面的指令,把各組員子模組的資料抓近來,記得要把2016fallcadp_bg6\.git\modules裡該組員的隱藏資料夾刪掉&lt;/p&gt;

&lt;pre&gt;
git submodule update --init --recursive
&lt;/pre&gt;

&lt;p&gt;就可以重新執行指令,把組員的子模組加進來&lt;/p&gt;

&lt;pre&gt;
git submodule add -b gh-pages https://github.com/40423226/2016fallcadp_hw.git 40423226
&lt;/pre&gt;

&lt;h3&gt;解決方法二&lt;/h3&gt;

&lt;p&gt;直接依序執行以下的指令&lt;/p&gt;

&lt;pre&gt;
git submodule deinit asubmodule    
git rm asubmodule
# Note: asubmodule (no trailing slash)
# or, if you want to leave it in your working tree
git rm --cached asubmodule
&lt;/pre&gt;

&lt;p&gt;但是在2016fallcadp_bg6\.git\modules裡的隱藏資料夾,還是需要自己動手刪除&lt;/p&gt;</summary><category term="上課內容"></category><category term="解決問題"></category><category term="子模組"></category></entry><entry><title>20161014W5</title><link href="./20161014w5.html" rel="alternate"></link><published>2016-10-14T12:00:00+08:00</published><updated>2016-10-14T12:00:00+08:00</updated><author><name>40423226</name></author><id>tag:,2016-10-14:./20161014w5.html</id><summary type="html">&lt;h2&gt;初步認識SolveSpace&lt;h2&gt;
&lt;iframe src="https://player.vimeo.com/video/190087085" width="640" height="480" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="上課內容"></category><category term="SolveSpace"></category></entry><entry><title>20161007W4</title><link href="./20161007w4.html" rel="alternate"></link><published>2016-10-07T12:00:00+08:00</published><updated>2016-10-07T12:00:00+08:00</updated><author><name>40423226</name></author><id>tag:,2016-10-07:./20161007w4.html</id><summary type="html">&lt;h2&gt;設定使用者資料,讓可攜程式更方便&lt;/h2&gt;

&lt;iframe src="https://player.vimeo.com/video/190072906" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2&gt;用2016fallcadp_bg6的名稱,建立小組倉儲&lt;/h2&gt;

&lt;iframe src="https://player.vimeo.com/video/190075715" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="上課內容"></category></entry><entry><title>20160930W3</title><link href="./20160930w3.html" rel="alternate"></link><published>2016-09-30T12:00:00+08:00</published><updated>2016-09-30T12:00:00+08:00</updated><author><name>40423226</name></author><id>tag:,2016-09-30:./20160930w3.html</id><summary type="html">&lt;h2&gt;複製網誌和簡報的設定檔到2016fallcadp_hw的倉儲&lt;/h2&gt;

&lt;iframe src="https://player.vimeo.com/video/190065696" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2&gt;更改2016fallcadp_hw的README.md檔案&lt;/h2&gt;

&lt;pre&gt;簡報: https://40423226.github.io/2016fallcadp_hw
網址: https://40423226.github.io/2016fallcadp_hw/blog/&lt;/pre&gt;

&lt;iframe src="https://player.vimeo.com/video/190066620" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2&gt;解決近端設定代理主機的問題&lt;/h2&gt;

&lt;p&gt;每次上課須執行以下指令&lt;/p&gt;

&lt;pre&gt;
git config --global http.proxy http://proxy.mde.tw:3128
git config --global https.proxy http://proxy.mde.tw:3128
&lt;/pre&gt;

&lt;p&gt;輸入完之後出現了這個問題&lt;/p&gt;

&lt;pre&gt;
warning: http.proxy has multiple values
error: cannot overwrite multiple values with a single value
       Use a regexp, --add or --replace-all to change http.proxy.
&lt;/pre&gt;

&lt;p&gt;發現在Y:\home的.gitconfig檔案出現問題,從SciTE打開.gitconfig&lt;/p&gt;

&lt;pre&gt;
[http]
    proxy = 
    proxy = 
    proxy = 
    proxy = http://proxy.mde.tw:3128
[https]
    proxy = http://proxy.mde.tw:3128
[user]
    email = 40423226@gm.nfu.edu.tw
    name = 40423226
&lt;/pre&gt;

&lt;p&gt;更正後儲存
&lt;pre&gt;
[http]
    proxy = http://proxy.mde.tw:3128
[https]
    proxy = http://proxy.mde.tw:3128
[user]
    email = 40423226@gm.nfu.edu.tw
    name = 40423226
&lt;/pre&gt;&lt;/p&gt;</summary><category term="上課內容"></category><category term="解決問題"></category><category term="環境設定"></category></entry><entry><title>20160923W2</title><link href="./20160923w2.html" rel="alternate"></link><published>2016-09-23T12:00:00+08:00</published><updated>2016-09-23T12:00:00+08:00</updated><author><name>40423226</name></author><id>tag:,2016-09-23:./20160923w2.html</id><summary type="html">&lt;h2&gt;建立40423226.github.io名稱的倉儲&lt;/h2&gt;

&lt;iframe src="https://player.vimeo.com/video/190063679" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2&gt;把分支的預設值改為gh-pages&lt;/h2&gt;

&lt;iframe src="https://player.vimeo.com/video/190064489" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="上課內容"></category></entry><entry><title>20160916W1</title><link href="./20160916w1.html" rel="alternate"></link><published>2016-09-16T12:00:00+08:00</published><updated>2016-09-16T12:00:00+08:00</updated><author><name>40423226</name></author><id>tag:,2016-09-16:./20160916w1.html</id><summary type="html">&lt;h2&gt;利用中秋連假複習之前學過的指令&lt;/h2&gt;

&lt;p&gt;切換到2016fallcadp_hw的分支&lt;/p&gt;

&lt;pre&gt;cd &lt;u&gt;分支名稱&lt;/u&gt;
(例如:cd 2016fallcadp_hw)&lt;/pre&gt;

&lt;p&gt;回到上一個分支&lt;/p&gt;

&lt;pre&gt;cd ..&lt;/pre&gt;

&lt;p&gt;會新建一個40423226的資料夾,並把遠端資料存在裡面&lt;/p&gt;

&lt;pre&gt;git clone &lt;u&gt;倉儲網址&lt;/u&gt; &lt;u&gt;分支名稱&lt;/u&gt;
(例如:git clone https://github.com/40423226/2016fallcadp_hw.git 40423226)&lt;/pre&gt;

&lt;p&gt;檢查分支&lt;/p&gt;

&lt;pre&gt;git branch&lt;/pre&gt;

&lt;p&gt;建立一個gh-pages名稱的分支&lt;/p&gt;

&lt;pre&gt;git branch &lt;u&gt;分支名稱&lt;/u&gt;
(例如:git branch gh-pages)&lt;/pre&gt;

&lt;p&gt;切換到指定的gh-pages分支&lt;/p&gt;

&lt;pre&gt;git checkout &lt;u&gt;分支名稱&lt;/u&gt;
(例如:git checkout gh-pages)&lt;/pre&gt;

&lt;pre&gt;git add -A&lt;/pre&gt;

&lt;pre&gt;git commit -m"&lt;u&gt;改版內容&lt;/u&gt;"
(例如:git commit -m"yen.leo update")&lt;/pre&gt;

&lt;p&gt;推送進端資料到遠端,並且指定推送到gh-pages的分支&lt;/p&gt;

&lt;pre&gt;git push origin &lt;u&gt;分支名稱&lt;/u&gt;
(例如:git push origin gh-pages)&lt;/pre&gt;

&lt;pre&gt;git pull&lt;/pre&gt;

&lt;p&gt;收尋該檔案名稱,並逐一確認是否刪除&lt;/p&gt;

&lt;pre&gt;git rm &lt;u&gt;檔案名稱&lt;/u&gt;&lt;/pre&gt;

&lt;p&gt;回到之前072e3af的版本資料&lt;/p&gt;

&lt;pre&gt;git reset --hard &lt;u&gt;版本代碼&lt;/u&gt;
(例如:git reset --hard 072e3af)&lt;/pre&gt;

&lt;p&gt;直接刪除所有該檔案名稱的檔案&lt;/p&gt;

&lt;pre&gt;git rm &lt;u&gt;檔案名稱&lt;/u&gt; -f&lt;/pre&gt;</summary><category term="上課內容"></category></entry><entry><title>Other</title><link href="./other.html" rel="alternate"></link><published>1111-11-11T11:11:00+08:06</published><updated>1111-11-11T11:11:00+08:06</updated><author><name>40423226</name></author><id>tag:,1111-11-11:./other.html</id><summary type="html">&lt;h2&gt;使用環境設定&lt;/h2&gt;

&lt;pre&gt;
git config --global http.proxy http://proxy.mde.tw:3128
git config --global https.proxy http://proxy.mde.tw:3128
git config --global user.email "40423226@gm.nfu.edu.tw"
git config --global user.name "40423226"&lt;/pre&gt;

&lt;h2&gt;子模組&lt;/h2&gt;

&lt;p&gt;用40423226的名稱把https://github.com/40423226/2016fallcadp_hw的倉儲加入為子模組&lt;/p&gt;

&lt;pre&gt;git submodule add -b gh-pages &lt;u&gt;子模組網址&lt;/u&gt; &lt;u&gt;子模組名稱&lt;/u&gt;
(例如:git submodule add -b gh-pages https://github.com/40423226/2016fallcadp_hw 40423226)&lt;/pre&gt;

&lt;p&gt;抓對應子模組的版本&lt;/p&gt;

&lt;pre&gt;git submodule update --init --recursive&lt;/pre&gt;

&lt;p&gt;更新子模組的資料,甚至更新子模組裡子模組的資料&lt;/p&gt;

&lt;pre&gt;git submodule foreach "(git checkout gh-pages; git pull)&amp;"&lt;/pre&gt;

&lt;h2&gt;HTML文字語法&lt;/h2&gt;

&lt;h1&gt;h1&lt;/h1&gt;

&lt;h2&gt;h2&lt;/h2&gt;

&lt;h3&gt;h3&lt;/h3&gt;

&lt;h4&gt;h4&lt;/h4&gt;

&lt;h5&gt;h5&lt;/h5&gt;

&lt;h6&gt;h6&lt;/h6&gt;

&lt;pre&gt;
&amp;lt;h1&gt;h1&amp;lt;/h1&gt;
&amp;lt;h2&gt;h2&amp;lt;/h2&gt;
&amp;lt;h3&gt;h3&amp;lt;/h3&gt;
&amp;lt;h4&gt;h4&amp;lt;/h4&gt;
&amp;lt;h5&gt;h5&amp;lt;/h5&gt;
&amp;lt;h6&gt;h6&amp;lt;/h6&gt;
&lt;/pre&gt;

&lt;p align="center"&gt;置中&lt;/p&gt;

&lt;pre&gt;&amp;lt;p align="center"&gt;置中&amp;lt;/p&gt;&lt;/pre&gt;

&lt;p align="right"&gt;靠右&lt;/p&gt;

&lt;pre&gt;&amp;lt;p align="right"&gt;靠右&amp;lt;/p&gt;&lt;/pre&gt;

&lt;p&gt;&lt;b&gt;粗體&lt;/b&gt;&lt;/p&gt;

&lt;pre&gt;&amp;lt;b&gt;粗體&amp;lt;/b&gt;&lt;/pre&gt;

&lt;p&gt;&lt;i&gt;斜體&lt;/i&gt;&lt;/p&gt;

&lt;pre&gt;&amp;lt;i&gt;斜體&amp;lt;/i&gt;&lt;/pre&gt;

&lt;p&gt;&lt;u&gt;底線&lt;/u&gt;&lt;/p&gt;

&lt;pre&gt;&amp;lt;u&gt;底線&amp;lt;/u&gt;&lt;/pre&gt;</summary><category term="環境設定"></category><category term="子模組"></category><category term="HTML文字語法"></category></entry><entry><title>Onshape</title><link href="./onshape.html" rel="alternate"></link><published>1111-02-22T22:22:00+08:06</published><updated>1111-02-22T22:22:00+08:06</updated><author><name>40423226</name></author><id>tag:,1111-02-22:./onshape.html</id><summary type="html">&lt;h2&gt;&lt;a href="https://www.onshape.com/"&gt;Onshape&lt;/a&gt;&lt;/h2&gt;</summary><category term="Onshape"></category></entry><entry><title>SolveSpace</title><link href="./solvespace.html" rel="alternate"></link><published>1111-02-22T22:22:00+08:06</published><updated>1111-02-22T22:22:00+08:06</updated><author><name>40423226</name></author><id>tag:,1111-02-22:./solvespace.html</id><summary type="html">&lt;h2&gt;&lt;a href="http://solvespace.com/"&gt;SolveSpace&lt;/a&gt;&lt;/h2&gt;

&lt;h2&gt;SolveSpace 2D&lt;/h2&gt;

&lt;iframe src="https://player.vimeo.com/video/192920828" width="640" height="428" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;2D成品&lt;/p&gt;

&lt;p&gt;&lt;img src="../data/image/solvespace 2D.png" width="800" /&gt;&lt;/p&gt;
&lt;h2&gt;SolveSpace 3D&lt;/h2&gt;

&lt;iframe src="https://player.vimeo.com/video/192920873" width="640" height="428" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;3D成品&lt;/p&gt;

&lt;p&gt;&lt;img src="../data/image/solvespace 3D.png" width="800" /&gt;&lt;/p&gt;
&lt;h2&gt;Linkages&lt;/h2&gt;

&lt;iframe src="https://player.vimeo.com/video/195902223" width="640" height="428" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;尺寸&lt;/p&gt;

&lt;p&gt;&lt;img src="../data/image/linkages.png" width="800" /&gt;
&lt;p&gt;路徑&lt;/p&gt;
&lt;img src="../data/image/trace2.png" width="800" /&gt;&lt;/p&gt;
&lt;h2&gt;用SolveSpace把檔案存成html檔,並且更改成http設定,利用嵌入網頁的指令,把html檔案放進網誌裡面&lt;/h2&gt;

&lt;pre&gt;&amp;lt;iframe src="&lt;u&gt;檔案的相對位置&lt;/u&gt;" width="800" height="600"&gt;&amp;lt;/iframe&gt;&lt;/pre&gt;

&lt;iframe src="https://player.vimeo.com/video/194948275" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="SolveSpace"></category></entry></feed>